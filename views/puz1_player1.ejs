<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Player 1</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="/stylesheets/puz1style.css">
    <script src="/socket.io/socket.io.js"></script>
</head>
<body style="background-color: #B0903D;" class="flex items-center justify-center h-screen">
<br/>
<div class="text-center space-y-4">
    <h1 class="bg-yellow-400 text-black text-4xl px-20 py-2 border border-black">
        Can you decipher the secret code?
    </h1>
    <h2 class="text-xl"> Describe the symbols to Player 2 </h2>
    <table class="mx-auto border-black text-black text-5xl">
        <tr id="tableRow"></tr>
    </table>
    <form id="inputForm" method="POST">
        <input
                style="text-transform: uppercase"
                type="text"
                name="codeGuess"
                placeholder="Type code here"
                value="<%= locals.prevGuess %>"
        />
        <button type="submit">Submit</button>
    </form>
    <br>
    <h2 class="wrong-password text-2xl" id="wrongPass"></h2>

</div>
<audio id="correctAudio">
    <source src="/sounds/correct.mp3" type="audio/mpeg">
</audio>
<audio id="wrongAudio">
    <source src="/sounds/wrong.mp3" type="audio/mpeg">
</audio>
</body>
</html>
<script>
    //Connect to the socket. This allows us to send information to player 2
    const socket = io();

    const row = document.getElementById('tableRow');
    const hieroglyph = <%- JSON.stringify(locals.code_symbol) %>;

    for (let i = 0; i < hieroglyph.length; i++) {
        const cell = row.insertCell();
        cell.innerText = hieroglyph[i];
        cell.className = "bg-yellow-400 text-black text-5xl px-20 py-2 rounded";
    }

    let correctAudio = document.getElementById("correctAudio");
    let wrongAudio = document.getElementById("wrongAudio");
    //Check if last submit was correct, and play corresponding sound file
    //If variable is null, meaning no input has been yet, we do not play an audio file
    let wrongPassword = <%- JSON.stringify(wrongPassword) %>;
    if (wrongPassword != null) {
        if (wrongPassword === true) {
            document.getElementById("wrongPass").innerHTML = "Wrong password!";
            wrongAudio.volume = 0.5;
            wrongAudio.play();
        } else {
            correctAudio.volume = 0.5;
            correctAudio.play();
            correctAudio.addEventListener("ended", () => {
                //When the audio for correct input is done we refresh player 2's page and submit
                //the form. This allows both players in the puzzle1.js route to forward to puzzle 2
                socket.emit('newInput');
                document.getElementById("inputForm").submit()
            });
        }
    }
</script>